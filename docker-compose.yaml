services:
  postgres:
    image: pgvector/pgvector:0.8.1-pg18
    restart: always
    environment:
      POSTGRES_USER: system
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mockinterview
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U system -d mockinterview"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend_network

  redis:
    image: redis:8.0-alpine
    restart: always
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      NODE_ENV: development
      POSTGRES_HOST: postgres
      REDIS_URL: redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - /app/node_modules
    networks:
      - backend_network

volumes:
  postgres_data:
  redis_data:

networks:
  backend_network:
    driver: bridge
